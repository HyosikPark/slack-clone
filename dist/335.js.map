{"version":3,"sources":["webpack://frontend/./pages/Login/LogIn.tsx","webpack://frontend/./utils/fetcher.ts"],"names":["LogIn","data","mutate","useSWR","fetcher","email","setEmail","useState","password","setPassword","LoginError","setLoginError","onChangeEmail","useCallback","e","target","value","onChangePassword","onSubmit","preventDefault","axios","then","res","catch","undefined","to","id","data-testid","blankInput","type","name","onChange","React","url","withCredentials"],"mappings":"6NAOA,SAASA,IACP,MAAM,KAAEC,EAAF,OAAQC,IAAWC,QAAO,aAAcC,MAEvCC,EAAOC,IAAYC,cAAS,KAC5BC,EAAUC,IAAeF,cAAS,KAClCG,EAAYC,IAAiBJ,eAAS,GAEvCK,GAAgBC,kBACnBC,IACKJ,GAAYC,GAAc,GAE9BL,EAASQ,EAAEC,OAAOC,SAEpB,CAACN,IAGGO,GAAmBJ,kBACtBC,IACKJ,GAAYC,GAAc,GAE9BF,EAAYK,EAAEC,OAAOC,SAEvB,CAACN,IAGGQ,GAAWL,kBACdC,IACCA,EAAEK,iBAEFC,SACQ,mBAAoB,CACxBf,QACAG,aAEDa,MAAMC,GAAQpB,EAAOoB,EAAIrB,MAAM,KAC/BsB,OAAM,IAAMZ,GAAc,OAG/B,CAACN,EAAOH,EAAQM,IAGlB,YAAagB,IAATvB,EAA2B,KAE3BA,GAAa,QAAC,KAAD,CAAUwB,GAAG,kCAG5B,eAAKC,GAAG,cACN,QAAC,KAAD,qBACA,QAAC,KAAD,CAAMC,cAAY,OAAOT,SAAUA,IACjC,QAAC,KAAD,CAAOQ,GAAG,gBACR,+BACA,QAAC,KAAD,CAAOE,WAAYlB,EAAYmB,KAAK,QAAQH,GAAG,QAAQI,KAAK,QAAQd,MAAOX,EAAO0B,SAAUnB,MAE9F,QAAC,KAAD,CAAOc,GAAG,mBACR,6BACA,QAAC,KAAD,CACEE,WAAYlB,EACZmB,KAAK,WACLH,GAAG,WACHI,KAAK,WACLd,MAAOR,EACPuB,SAAUd,KAGbP,IAAc,QAAC,KAAD,CAAOiB,cAAY,eAAnB,4BACf,QAAC,KAAD,CAAQE,KAAK,UAAb,SAEF,QAAC,KAAD,uBAEE,QAAC,KAAD,CAAMJ,GAAG,WAAT,eAMR,QAAeO,OAAWhC,I,oEChFnB,SAASI,EAAQ6B,GACtB,OAAOb,QAAUa,EAAK,CAAEC,iBAAiB,IAAQb,MAAMC,GAAQA,EAAIrB","file":"335.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Form, Label, Input, LinkContainer, Button, Header, Error } from '@pages/SignUp/styles';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\n\nfunction LogIn() {\n  const { data, mutate } = useSWR('/api/users', fetcher);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [LoginError, setLoginError] = useState(false);\n\n  const onChangeEmail = useCallback(\n    (e) => {\n      if (LoginError) setLoginError(false);\n\n      setEmail(e.target.value);\n    },\n    [LoginError],\n  );\n\n  const onChangePassword = useCallback(\n    (e) => {\n      if (LoginError) setLoginError(false);\n\n      setPassword(e.target.value);\n    },\n    [LoginError],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      axios\n        .post('/api/users/login', {\n          email,\n          password,\n        })\n        .then((res) => mutate(res.data, false))\n        .catch(() => setLoginError(true));\n    },\n\n    [email, mutate, password],\n  );\n\n  if (data === undefined) return null;\n\n  if (data) return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n\n  return (\n    <div id=\"container\">\n      <Header>Slack-clone</Header>\n      <Form data-testid=\"form\" onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <Input blankInput={LoginError} type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <Input\n            blankInput={LoginError}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onChangePassword}\n          />\n        </Label>\n        {LoginError && <Error data-testid=\"login-error\">아이디 또는 비밀번호가 일치하지 않습니다.</Error>}\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n}\n\nexport default React.memo(LogIn);\n","import axios from 'axios';\n\nexport function fetcher(url: string) {\n  return axios.get(url, { withCredentials: true }).then((res) => res.data);\n}\n"],"sourceRoot":""}